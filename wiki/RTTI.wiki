#labels Class,ClassesRegistry,Object,Property
=RTTI=

Engine's runtime type identification system. 

It's acutally a little bit more than that - it supports objects with properties, their serialization etc.

But let's start slow :)

==Runtime object==

Only `ReflectionObjects` are run-time recognizable and serializable.

Why? Because only those objects feature RTTI data required to perform those operations. You are of course free to add RTTI definitions to any classes you like, but the serialization mechanism for instance works *exclusively* with `ReflectionObjects`.

So what is this `ReflectionObject` - it's a marker interface, that's all. You just need to derive from it and use one of our handy macros to add a type definitions to it:

{{{
}}}

==Classes registry==

==Object==

==Properties==

You can make anything a property - all it needs to have is a defined `operator<<` method, so that its value can be serialized.
Here's an example:

{{{
struct MyStruct
{
   int m_data;

   friend Serializer& operator<<( Serializer& serializer, MyStruct& rhs )
   {
      serializer << rhs .m_data;
      return serializer;
   }
};
}}}