#labels renderer
=Renderer=

A renderer allows to render 3D graphics on screen. It takes care of managing the device's state, finding out about best texture formats etc.

To get it to work, you only need to instantiate a renderer and set a `RenderingMechanism`, that will start feeding the renderer some `RenderCommands` and that's it.

A renderer can't work on its own however - it requres an underlying library it will execute the commands on and bring images to life.

At this moment, the only imlementation that exists uses DirectX9, but there will be more.

==Core functionality==

==Geometry==

===Vertex shaders output structure===

{{{
struct VS_OUTPUT
{
    float4 Position     : POSITION;   // vertex position 
    float4 Diffuse      : COLOR0;     // vertex diffuse color (note that COLOR0 is clamped from 0..1)
    float2 TextureUV    : TEXCOORD0;  // vertex texture coords 
    float3 Normal       : TEXCOORD1;  // vertex normal
    float3 ViewPosition : TEXCOORD2;  // vertex view position
};
}}}

==Materials==

==Debug renderer==

==Rendering pipeline==


==Camera==